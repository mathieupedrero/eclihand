/*DROP INSTRUCTIONS*/
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

DROP DATABASE eclihand;
--
-- TOC entry 1960 (class 1262 OID 24576)
-- Name: eclihand; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE eclihand WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'French_France.1252' LC_CTYPE = 'French_France.1252';


ALTER DATABASE eclihand OWNER TO postgres;

\connect eclihand

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- TOC entry 5 (class 2615 OID 2200)
-- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA public;


ALTER SCHEMA public OWNER TO postgres;

--
-- TOC entry 1961 (class 0 OID 0)
-- Dependencies: 5
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- TOC entry 175 (class 3079 OID 11727)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 1963 (class 0 OID 0)
-- Dependencies: 175
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

/*CREATE INSTRUCTIONS*/
CREATE SEQUENCE OBJ_OBJECT_ID_SEQ;

CREATE TABLE OBJ_OBJECT (
ID INTEGER NOT NULL,
OBJ_INDEX TEXT,
CONSTRAINT PK_OBJ PRIMARY KEY (ID)
);

CREATE TABLE ILL_ILLUSTRABLE (
ID INTEGER NOT NULL,
CONSTRAINT PK_ILL PRIMARY KEY (ID),
CONSTRAINT FK_ILL__OBJ FOREIGN KEY (ID) REFERENCES OBJ_OBJECT (ID)
);

CREATE TABLE PER_PERSON (
ID INTEGER NOT NULL,
PER_FIRST_NAME VARCHAR(64) NOT NULL,
PER_LAST_NAME VARCHAR(64) NOT NULL,
PER_BIRTH_DATE DATE,
PER_GENDER VARCHAR(64),
CONSTRAINT PK_PER PRIMARY KEY (ID),
CONSTRAINT FK_PER__ILL FOREIGN KEY (ID) REFERENCES ILL_ILLUSTRABLE (ID)
);

CREATE TABLE PLA_PLAYER (
ID INTEGER NOT NULL,
PLA_PER_ID INTEGER NOT NULL,
CONSTRAINT PK_PLA PRIMARY KEY (ID),
CONSTRAINT FK_PLA__PER FOREIGN KEY (PLA_PER_ID) REFERENCES PER_PERSON (ID),
CONSTRAINT FK_PLA__ILL FOREIGN KEY (ID) REFERENCES ILL_ILLUSTRABLE (ID)
);

CREATE TABLE TEA_TEAM (
ID INTEGER NOT NULL,
TEA_YEAR INTEGER NOT NULL,
TEA_GENDER VARCHAR(64) NOT NULL,
CONSTRAINT PK_TEA PRIMARY KEY (ID),
CONSTRAINT FK_TEA__ILL FOREIGN KEY (ID) REFERENCES ILL_ILLUSTRABLE (ID)
);

CREATE TABLE PLA_PLAYER_TEA_TEAM (
PLA_ID INTEGER NOT NULL,
TEA_ID INTEGER NOT NULL,
CONSTRAINT PK_PLA_TEA PRIMARY KEY (PLA_ID,TEA_ID),
CONSTRAINT FK_PLA_TEA__PLA FOREIGN KEY (PLA_ID) REFERENCES PLA_PLAYER (ID),
CONSTRAINT FK_PLA_TEA__TEA FOREIGN KEY (TEA_ID) REFERENCES TEA_TEAM (ID)
);

CREATE TABLE USR_USER (
ID INTEGER NOT NULL,
USR_LOGIN VARCHAR(64) NOT NULL,
USR_PASSWORD VARCHAR(64) NOT NULL,
CONSTRAINT PK_USR PRIMARY KEY (ID)
);

CREATE TABLE PRF_PROFILE (
ID INTEGER NOT NULL,
PRF_NAME VARCHAR(64) NOT NULL,
CONSTRAINT PK_PRF PRIMARY KEY (ID)
);

CREATE TABLE RGT_RIGHT (
ID INTEGER NOT NULL,
RGT_NAME VARCHAR(64) NOT NULL,
CONSTRAINT PK_RGT PRIMARY KEY (ID)
);

CREATE TABLE PRF_PROFILE_RGT_RIGHT (
PRF_ID INTEGER NOT NULL,
RGT_ID INTEGER NOT NULL,
CONSTRAINT PK_PRF_RGT PRIMARY KEY (PRF_ID,RGT_ID),
CONSTRAINT FK_PRF_RGT__PLA FOREIGN KEY (PRF_ID) REFERENCES PRF_PROFILE (ID),
CONSTRAINT FK_PRF_RGT__TEA FOREIGN KEY (RGT_ID) REFERENCES RGT_RIGHT (ID)
);

CREATE TABLE USR_USER_PRF_PROFILE (
USR_ID INTEGER NOT NULL,
PRF_ID INTEGER NOT NULL,
CONSTRAINT PK_USR_PRF PRIMARY KEY (USR_ID,PRF_ID),
CONSTRAINT FK_USR_PRF__USR FOREIGN KEY (USR_ID) REFERENCES USR_USER (ID),
CONSTRAINT FK_USR_PRF__PRF FOREIGN KEY (PRF_ID) REFERENCES RGT_RIGHT (ID)
);

commit;
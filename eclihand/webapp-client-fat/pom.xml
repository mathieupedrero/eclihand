<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.pedrero</groupId>
    <artifactId>eclihand</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <groupId>com.pedrero.eclihand</groupId>
  <artifactId>webapp-client-fat</artifactId>
  <packaging>war</packaging>
  <name>Eclihand Webapp</name>
  <dependencies>
  	<dependency>
  		<groupId>com.pedrero.eclihand</groupId>
  		<artifactId>model-api</artifactId>
  		<scope>compile</scope>
  	</dependency>
  	<dependency>
  		<groupId>com.pedrero.eclihand</groupId>
  		<artifactId>model-postgres-impl</artifactId>
  		<scope>compile</scope>
  	</dependency>
  	<dependency>
  		<groupId>com.pedrero.eclihand</groupId>
  		<artifactId>dao-api</artifactId>
  		<scope>compile</scope>
  	</dependency>
  	<dependency>
  		<groupId>com.pedrero.eclihand</groupId>
  		<artifactId>dao-hibernate-impl</artifactId>
  		<scope>compile</scope>
  	</dependency>
  	<dependency>
  		<groupId>com.pedrero.eclihand</groupId>
  		<artifactId>service-api</artifactId>
  		<scope>compile</scope>
  	</dependency>
  	<dependency>
  		<groupId>com.pedrero.eclihand</groupId>
  		<artifactId>service-impl</artifactId>
  		<scope>compile</scope>
  	</dependency>
    <dependency>
    	<groupId>org.hibernate</groupId>
    	<artifactId>hibernate-entitymanager</artifactId>
  		<scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
  		<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>net.sf.ehcache</groupId>
    	<artifactId>ehcache-core</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-core</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-expression</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-beans</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context-support</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-tx</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-orm</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework.data</groupId>
  		<artifactId>spring-data-jpa</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-aspects</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
   		<groupId>org.springframework</groupId>
   		<artifactId>spring-web</artifactId>
		<scope>compile</scope>
   </dependency>
   <dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-web</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
   		<groupId>net.sf.dozer</groupId>
   		<artifactId>dozer</artifactId>
  		<scope>compile</scope>
   </dependency>
   <dependency>
   		<groupId>com.vaadin</groupId>
   		<artifactId>vaadin-server</artifactId>
   </dependency>
   <dependency>
   		<groupId>com.vaadin</groupId>
   		<artifactId>vaadin-shared</artifactId>
   </dependency>
   <dependency>
   		<groupId>com.vaadin</groupId>
   		<artifactId>vaadin-theme-compiler</artifactId>
   </dependency>
   <dependency>
   		<groupId>com.vaadin</groupId>
   		<artifactId>vaadin-themes</artifactId>
   </dependency>
   <dependency>
   		<groupId>com.vaadin</groupId>
   		<artifactId>vaadin-client</artifactId>
   </dependency>
   <dependency>
   		<groupId>com.vaadin</groupId>
   		<artifactId>vaadin-client-compiler</artifactId>
   </dependency>
   <dependency>
   		<groupId>com.vaadin</groupId>
   		<artifactId>vaadin-maven-plugin</artifactId>
   </dependency>
   <dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
   </dependency>
   <dependency>
	   	<groupId>org.mvel</groupId>
	   	<artifactId>mvel2</artifactId>
   </dependency>
  </dependencies>
  <build>
    <finalName>webapp</finalName>
<plugins>
	<plugin>
	                                <groupId>com.vaadin</groupId>
	                                <artifactId>vaadin-maven-plugin</artifactId>
	                                <version>${vaadin.version}</version>
	                                <configuration>
	                                        <extraJvmArgs>-Xmx1024M -Xss1024k</extraJvmArgs>
	                                        <!-- <runTarget>mobilemail</runTarget> -->
	                                        <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This
	                                                way compatible with Vaadin eclipse plugin. -->
	                                        <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
	                                        </webappDirectory>
	                                        <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
	                                        </hostedWebapp>
	                                        <noServer>true</noServer>
	                                        <!-- Remove draftCompile when project is ready -->
	                                        <draftCompile>false</draftCompile>
	                                        <strict>true</strict>
	                                        <compileReport>false</compileReport>
	                                        <style>OBF</style>
	                                        <runTarget>http://localhost:8080/</runTarget>
	                                        <persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
	                                        <deploy>${project.build.directory}/gwt-deploy</deploy>
	                                        <!-- Remove these when going to release dependencies -->
	                                        <!-- <force>true</force> -->
	                                </configuration>
	                                <executions>
	                                        <execution>
	                                                <goals>
	                                                        <goal>resources</goal>
	                                                        <goal>compile</goal>
	                                                </goals>
                                        </execution>	                                </executions>
                        </plugin>
</plugins>
  </build>
</project>
